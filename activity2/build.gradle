plugins {
  id 'java'
  id "com.google.protobuf" version "0.8.13" apply true

}

description = "Protocol Buffers Socket Example"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.18.0'
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.1'
    }
    generateProtoTasks {
    all().each { task ->
      task.builtins {
      }
    }
  }
}
 def host = 'localhost'
 def port = 9099

tasks.register('arguments') {
    if (project.hasProperty("host")) {
        host = project.getProperty("host")
    }
    if (project.hasProperty("port")) {
        port = project.getProperty("port")
    }
}


//gradle runClient -Pport=9099 -Phost='localhost'
tasks.register('runClient', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = "Run Client"
    mainClass = 'client.SockBaseClient'
    standardInput = System.in
    args host
    args port
}

//gradle runServer -Pport=9099
tasks.register('runServer', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    description = "Run Server"
    mainClass = 'server.SockBaseServer'
    if (project.hasProperty('-Pport')) {
        port = project.getProperty('-Pport')
    } else{
        args port
    }
}

tasks.named("processResources").configure { dependsOn("generateProto") }


